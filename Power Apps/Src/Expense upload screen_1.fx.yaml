"'Expense upload screen_1' As screen.'autoLayout_HeaderFooter_ver1.0'":
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary
    OnVisible: |
        =UpdateContext({SelectMode: false});
        UpdateContext({deleteConfirm: false});
        UpdateContext({confirmEntry: false});
        Refresh('Expense Data');

    ScreenContainer1_1 As groupContainer.verticalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Fill: =RGBA(245, 245, 245, 1)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =16
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =16
        PaddingLeft: =16
        PaddingRight: =16
        PaddingTop: =16
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =1

        HeaderContainer1_1 As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =75
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =2

        MainContainer1_1 As groupContainer.verticalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            Fill: =RGBA(255, 255, 255, 1)
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =3

            Form1_1 As form.PowerApps_CoreControls_Form:
                AlignInContainer: =AlignInContainer.Start
                BorderColor: =App.Theme.Colors.Darker40
                DataSource: ='Expense Data'
                DefaultMode: =FormMode.New
                FillPortions: =0.8
                LayoutMinHeight: =250
                LayoutMinWidth: =400
                NumberOfColumns: =1
                UseFluentV9Cards: =true
                ZIndex: =1

                User_DataCard1 As typedDataCard.fluentV9TextualEditCard:
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="User"
                    Default: =Name
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,User)
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    MaxLength: =DataSourceInfo([@'Expense Data'], DataSourceInfo.MaxLength, User)
                    Required: =false
                    Update: =DataCardValue1.Value
                    Width: =800
                    X: =0
                    Y: =0
                    ZIndex: =1

                    DataCardKey1 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    "DataCardValue1 As 'Text input'":
                        AccessibleLabel: =Parent.DisplayName
                        BasePaletteColor: =
                        BorderColor: =
                        DisplayMode: |
                            =DisplayMode.View
                        Fill: =
                        FontColor: =
                        Height: =32
                        Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                        Required: =Parent.Required
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Value: =Parent.Default
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey1.Y + DataCardKey1.Height + 4
                        ZIndex: =2

                    ErrorMessage1 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue1.Y + DataCardValue1.Height
                        ZIndex: =3

                    StarVisible1 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey1.Y
                        ZIndex: =4

                "'Receipt Upload_DataCard1' As typedDataCard.fluentV9AddLargePictureCard":
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="ReceiptUpload"
                    Default: =ThisItem.'Receipt Upload'
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,'Receipt Upload')
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =50
                    Required: =false
                    Update: =Image1.Image
                    Width: =800
                    X: =0
                    Y: =1
                    ZIndex: =1

                    DataCardKey10 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =34
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                        ZIndex: =1

                    Image1 As image:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        DisplayMode: =Parent.DisplayMode
                        Height: =AddPicture1.Height
                        Image: |
                            =If(IsBlank(AddPicture1.Media), Parent.Default, AddPicture1.Media)
                        Tooltip: =Parent.DisplayName
                        Width: =AddPicture1.Width
                        X: =AddPicture1.X
                        Y: =AddPicture1.Y
                        ZIndex: =2

                    AddPicture1 As addMedia:
                        BorderColor: =App.Theme.Colors.Darker40
                        Color: =RGBA(0, 0, 0, 1)
                        Fill: =RGBA(255, 255, 255, 1)
                        Height: =200
                        OnSelect: |+
                            =Notify("Receipt is Being Scanned, Please Wait",NotificationType.Warning);
                            Set(FlowResults, TestingReceipts.Run(AddPicture1.Media));
                            Notify("Receipt is Being Scanned, Please Wait.",NotificationType.Warning);
                            Set(InvoiceDate, FlowResults.date1);
                            Notify("Receipt is Being Scanned, Please Wait..",NotificationType.Warning);
                            Set(AmountTotal, FlowResults.totaldue);
                            Notify("Receipt is Being Scanned, Please Wait...",NotificationType.Warning);
                            Set(VendorName, FlowResults.name);
                            Notify("Receipt is Being Scanned, Please Wait....",NotificationType.Warning);
                            Set(InvoiceTotal, FlowResults.amountdue);
                            Notify("Receipt is Finished Scanning...Please Double-Check all Fields",NotificationType.Success);
                            
                            
                            
                            
                            
                            
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey10.Y + DataCardKey10.Height + 5
                        ZIndex: =3

                    ErrorMessage10 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =10
                        Size: =12
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =Image1.Y + Image1.Height
                        ZIndex: =4

                    StarVisible10 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =DataCardKey10.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        X: =0
                        Y: =DataCardKey10.Y
                        ZIndex: =5

                Attachments_DataCard1 As typedDataCard.attachmentsEditCard:
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="{Attachments}"
                    Default: =ThisItem.Attachments
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,'{Attachments}')
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =50
                    Required: =false
                    Update: =DataCardValue16.Attachments
                    Width: =800
                    X: =0
                    Y: =9
                    ZIndex: =1

                    DataCardKey17 As label:
                        AutoHeight: =true
                        Color: =App.Theme.Colors.Darker30
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        Font: =App.Theme.Font
                        Height: =34
                        Size: =13
                        Text: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                        ZIndex: =1

                    DataCardValue16 As attachments:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        BorderThickness: =2
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        DisplayMode: =Parent.DisplayMode
                        FocusedBorderThickness: =4
                        Font: =App.Theme.Font
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =App.Theme.Colors.Lighter70
                        IsInDataCard: =true
                        ItemColor: =RGBA(255, 255, 255, 1)
                        ItemFill: =App.Theme.Colors.Primary
                        ItemHoverColor: =RGBA(0, 0, 0, 1)
                        ItemHoverFill: =App.Theme.Colors.Lighter70
                        Items: =Parent.Default
                        PaddingBottom: =5
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedColor: =RGBA(255, 255, 255, 1)
                        PressedFill: =App.Theme.Colors.Darker30
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey17.Y + DataCardKey17.Height + 5
                        ZIndex: =2

                    ErrorMessage17 As label:
                        AutoHeight: =true
                        Color: =RGBA(168, 0, 0, 1)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        Font: =App.Theme.Font
                        FontWeight: =FontWeight.Semibold
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardValue16.Y + DataCardValue16.Height
                        ZIndex: =3

                    StarVisible17 As label:
                        Align: =Align.Center
                        Color: =App.Theme.Colors.Darker30
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        Font: =App.Theme.Font
                        Height: =DataCardKey17.Height
                        Size: =13
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey17.Y
                        ZIndex: =4

                "'Payment Type_DataCard1' As typedDataCard.fluentV9ComboBoxEditCard":
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="PaymentType"
                    Default: =ThisItem.'Payment Type'
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,'Payment Type')
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    Required: =false
                    Update: =DataCardValue2.Selected
                    Width: =800
                    X: =0
                    Y: =2
                    ZIndex: =2

                    DataCardKey2 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    DataCardValue2 As Combobox.pcfdataset:
                        AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                        DefaultSelectedItems: =[Parent.Default]
                        DisplayMode: =Parent.DisplayMode
                        Height: =32
                        Items: =Choices([@'Expense Data'].'Payment Type')
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey2.Y + DataCardKey2.Height + 4
                        ZIndex: =2

                    ErrorMessage2 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue2.Y + DataCardValue2.Height
                        ZIndex: =3

                    StarVisible2 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =20
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey2.Y
                        ZIndex: =4

                "'Expense Type_DataCard1' As typedDataCard.fluentV9ComboBoxEditCard":
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="ExpenseType"
                    Default: =ThisItem.'Expense Type'
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,'Expense Type')
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    Required: =true
                    Update: =DataCardValue4.Selected
                    Width: =800
                    X: =0
                    Y: =3
                    ZIndex: =2

                    DataCardKey4 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    DataCardValue4 As Combobox.pcfdataset:
                        AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                        DefaultSelectedItems: =[Parent.Default]
                        DisplayMode: =Parent.DisplayMode
                        Height: =32
                        Items: =Choices([@'Expense Data'].'Expense Type')
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey4.Y + DataCardKey4.Height + 4
                        ZIndex: =2

                    ErrorMessage4 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue4.Y + DataCardValue4.Height
                        ZIndex: =3

                    StarVisible4 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =20
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey4.Y
                        ZIndex: =4

                "'Vendor Name_DataCard1' As typedDataCard.fluentV9TextualEditCard":
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="VendorName"
                    Default: =If(IsBlank(AddPicture1.Media), ThisItem.'Vendor Name',VendorName)
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,'Vendor Name')
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    MaxLength: =DataSourceInfo([@'Expense Data'], DataSourceInfo.MaxLength, 'Vendor Name')
                    Required: =true
                    Update: =DataCardValue5.Value
                    Width: =800
                    X: =0
                    Y: =4
                    ZIndex: =2

                    DataCardKey5 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    "DataCardValue5 As 'Text input'":
                        AccessibleLabel: =Parent.DisplayName
                        BasePaletteColor: =
                        BorderColor: =
                        DisplayMode: =Parent.DisplayMode
                        Fill: =
                        FontColor: =
                        Height: =32
                        Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                        Required: =Parent.Required
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Value: =Parent.Default
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey5.Y + DataCardKey5.Height + 4
                        ZIndex: =2

                    ErrorMessage5 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue5.Y + DataCardValue5.Height
                        ZIndex: =3

                    StarVisible5 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey5.Y
                        ZIndex: =4

                Date_DataCard1 As typedDataCard.fluentV9DateEditCard:
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="Date"
                    Default: =If(IsBlank(AddPicture1.Media), ThisItem.Date,InvoiceDate)
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,Date)
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    Required: =true
                    Update: =DataCardValue3.SelectedDate
                    Width: =800
                    X: =0
                    Y: =5
                    ZIndex: =2

                    DataCardKey3 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    "DataCardValue3 As 'Date picker'":
                        AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                        BasePaletteColor: =
                        BorderColor: =
                        DisplayMode: =Parent.DisplayMode
                        EndDate: =Date(Year(Today())+100, 12, 31)
                        Fill: =
                        FontColor: =
                        Height: =32
                        OnChange: =false
                        SelectedDate: =Parent.Default
                        StartDate: =Date(1900, 1, 1)
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey3.Y + DataCardKey3.Height + 4
                        ZIndex: =2

                    ErrorMessage3 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue3.Y + DataCardValue3.Height
                        ZIndex: =3

                    StarVisible3 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey3.Y
                        ZIndex: =4

                Amount_DataCard1 As typedDataCard.fluentV9NumberEditCard:
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="Amount"
                    Default: =If(IsBlank(AddPicture1.Media), ThisItem.Amount,AmountTotal)
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,Amount)
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    Required: =true
                    Update: =Value(DataCardValue6.Value)
                    Width: =800
                    X: =0
                    Y: =6
                    ZIndex: =2

                    DataCardKey6 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    "DataCardValue6 As 'Text input'":
                        AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                        BasePaletteColor: =
                        BorderColor: =
                        DisplayMode: =Parent.DisplayMode
                        Fill: =
                        FontColor: =
                        Height: =32
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Value: =Parent.Default
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey6.Y + DataCardKey6.Height + 4
                        ZIndex: =2

                    ErrorMessage6 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue6.Y + DataCardValue6.Height
                        ZIndex: =3

                    StarVisible6 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey6.Y
                        ZIndex: =4

                Comments_DataCard1 As typedDataCard.fluentV9TextualEditCard:
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="Comments"
                    Default: =ThisItem.Comments
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,Comments)
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    MaxLength: =DataSourceInfo([@'Expense Data'], DataSourceInfo.MaxLength, Comments)
                    Required: =false
                    Update: =DataCardValue7.Value
                    Width: =800
                    X: =0
                    Y: =7
                    ZIndex: =2

                    DataCardKey7 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    "DataCardValue7 As 'Text input'":
                        AccessibleLabel: =Parent.DisplayName
                        BasePaletteColor: =
                        BorderColor: =
                        DisplayMode: =Parent.DisplayMode
                        Fill: =
                        FontColor: =
                        Height: =32
                        Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                        Required: =Parent.Required
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Value: =Parent.Default
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey7.Y + DataCardKey7.Height + 4
                        ZIndex: =2

                    ErrorMessage7 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue7.Y + DataCardValue7.Height
                        ZIndex: =3

                    StarVisible7 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey7.Y
                        ZIndex: =4

                SubExpense_DataCard1 As typedDataCard.fluentV9TextualEditCard:
                    BorderColor: =App.Theme.Colors.Darker40
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="SubExpense"
                    Default: =ThisItem.SubExpense
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: =DataSourceInfo([@'Expense Data'],DataSourceInfo.DisplayName,SubExpense)
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =70
                    MaxLength: =DataSourceInfo([@'Expense Data'], DataSourceInfo.MaxLength, SubExpense)
                    Required: =false
                    Update: =DataCardValue8.Value
                    Width: =800
                    X: =0
                    Y: =8
                    ZIndex: =2

                    DataCardKey8 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =22
                        Text: =Parent.DisplayName
                        Weight: ='TextCanvas.Weight'.Semibold
                        Width: =Parent.Width - 48
                        Wrap: =false
                        X: =24
                        Y: =10
                        ZIndex: =1

                    "DataCardValue8 As 'Text input'":
                        AccessibleLabel: =Parent.DisplayName
                        BasePaletteColor: =
                        BorderColor: =
                        DisplayMode: =Parent.DisplayMode
                        Fill: =
                        FontColor: =
                        Height: =32
                        Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                        Required: =Parent.Required
                        ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                        Value: =Parent.Default
                        Width: =Parent.Width - 48
                        X: =24
                        Y: =DataCardKey8.Y + DataCardKey8.Height + 4
                        ZIndex: =2

                    ErrorMessage8 As Text:
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: =Parent.Error
                        Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                        Width: =Parent.Width - 48
                        Wrap: =true
                        X: =24
                        Y: =DataCardValue8.Y + DataCardValue8.Height
                        ZIndex: =3

                    StarVisible8 As Text:
                        Align: ='TextCanvas.Align'.Center
                        BorderColor: =
                        DisplayMode: =DisplayMode.Edit
                        Fill: =
                        FontColor: =
                        Height: =30
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        X: =0
                        Y: =DataCardKey8.Y
                        ZIndex: =4

        FooterContainer1_1 As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =75
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            ZIndex: =4

    "'temp expense list' As gallery.'BrowseLayout_Vertical_OneTextOneImageVariant_ver5.0'":
        BorderColor: =App.Theme.Colors.Darker40
        DelayItemLoading: =true
        Height: =441
        Items: =Filter('Expense Data','User - Temp' = User().Email)
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        OnSelect: =
        TemplatePadding: =0
        TemplateSize: =116
        Width: =508
        X: =816
        Y: =105
        ZIndex: =1

        Image2 As image:
            BorderColor: =App.Theme.Colors.Darker40
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Height: =84
            Image: =ThisItem.'Receipt Upload'
            OnSelect: =Select(Parent)
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =84
            X: =16
            Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
            ZIndex: =1

        Title1 As label:
            Color: =RGBA(50, 49, 48, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =App.Theme.Font
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Amount
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 185
            X: =115
            Y: =(Parent.TemplateHeight - (Self.Size*1.8 + Subtitle1.Size*1.8 + 2 + Body1.Size*1.8)) / 2
            ZIndex: =2

        Subtitle1 As label:
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =App.Theme.Font
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.'Approval Status'.Value
            VerticalAlign: =VerticalAlign.Top
            Width: =Title1.Width
            X: =Title1.X
            Y: =Title1.Y + Title1.Height
            ZIndex: =3

        Body1 As label:
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =App.Theme.Font
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =ThisItem.Date
            VerticalAlign: =VerticalAlign.Top
            Width: =Subtitle1.Width
            X: =Title1.X
            Y: =Subtitle1.Y + Subtitle1.Height
            ZIndex: =4

        NextArrow1 As icon.ChevronRight:
            AccessibleLabel: =Self.Tooltip
            BorderColor: =App.Theme.Colors.Darker40
            Color: =RGBA(166, 166, 166, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(244, 244, 244, 1)
            Height: =50
            Icon: =Icon.ChevronRight
            OnSelect: |-
                =Set(CurrentItemUploadID, ThisItem);
                Navigate('Expense Upload Detailed Item View', ScreenTransition.Fade)
            PaddingBottom: =16
            PaddingLeft: =16
            PaddingRight: =16
            PaddingTop: =16
            Tooltip: ="View item details"
            Visible: =!SelectMode
            Width: =50
            X: =Parent.TemplateWidth - Self.Width - 12
            Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
            ZIndex: =5

        Separator1 As rectangle:
            BorderColor: =App.Theme.Colors.Darker40
            BorderThickness: =0.1
            Fill: =RGBA(0, 0, 0, 1)
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - Self.Height
            ZIndex: =6

        Rectangle1 As rectangle:
            BorderColor: =App.Theme.Colors.Darker40
            Fill: =App.Theme.Colors.Darker30
            Height: =Parent.TemplateHeight - Separator1.Height
            OnSelect: =Select(Parent)
            Visible: =ThisItem.IsSelected
            Width: =4
            ZIndex: =7

        CheckboxCanvas2 As Checkbox:
            BasePaletteColor: =
            DisplayMode: =DisplayMode.Edit
            FontColor: =
            Height: =29
            Label: =
            OnCheck: |-
                =Collect(SelectedItems, ThisItem);
                UpdateContext({cancelMode:false})
            OnSelect: =Select(Parent)
            OnUncheck: =Remove(SelectedItems, ThisItem)
            Visible: =SelectMode
            Width: =34
            X: =438
            Y: =44
            ZIndex: =8

    ButtonCanvas7_1 As Button:
        BasePaletteColor: =RGBA(8, 222, 8, 1)
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =44
        Icon: ="Checkmark"
        Layout: ='ButtonCanvas.Layout'.IconAfter
        OnSelect: |
            =// Create a collection from 'Expense Data' with necessary fields
            ClearCollect(
                DATA,
                ShowColumns(
                    'Expense Data',
                    ID, // Ensure ID is included for updates
                    'Date - Temp',
                    'Receipt Upload - Temp',
                    'Payment Type - Temp',
                    'Amount - Temp',
                    'Expense Type - Temp',
                    'Vendor Name - Temp',
                    'SubExpense - Temp',
                    'Comments - Temp',
                    'User - Temp'
                )
            );
            
            // Check if the collection is empty and perform the appropriate action
            If(
                IsEmpty(DATA) &&
                IsBlank(Image1.Image) &&
                IsBlank(DataCardValue2.Selected.Value) &&
                IsBlank(DataCardValue4.Selected.Value) &&
                (DataCardValue5.Value = "") &&
                IsBlank(DataCardValue3.SelectedDate) &&
                IsBlank(Value(DataCardValue6.Value)) &&
                (DataCardValue7.Value = "") &&
                (DataCardValue8.Value = ""),
            
                Notify("No Expenses to be Submitted", NotificationType.Warning),
            
                If(
                    IsBlank(Image1.Image) &&
                    IsBlank(DataCardValue2.Selected.Value) &&
                    IsBlank(DataCardValue4.Selected.Value) &&
                    (DataCardValue5.Value = "") &&
                    IsBlank(DataCardValue3.SelectedDate) &&
                    IsBlank(Value(DataCardValue6.Value)) &&
                    (DataCardValue7.Value = "") &&
                    (DataCardValue8.Value = ""),
            
                    // Iterate through the collection and patch each record to blank values
                    ForAll(
                        DATA,
                        Patch(
                            'Expense Data', // Data source to update
                            LookUp(
                                'Expense Data',
                                ID = DATA[@ID] // Correctly reference ID from DATA
                            ),
                            {
                                'Date - Temp': Blank(),
                                'Receipt Upload - Temp': Blank(),
                                'Payment Type - Temp': Blank(),
                                'Amount - Temp': Blank(),
                                'Expense Type - Temp': Blank(),
                                'Vendor Name - Temp': Blank(),
                                'SubExpense - Temp': Blank(),
                                'Comments - Temp': Blank(),
                                'User - Temp': Blank()
                            }
                        )
                    );
                    Notify("Expenses Have been Successfully Submitted", NotificationType.Success);
                    Refresh('Expense Data'),
                    
                    If(
                        Form1_1.Valid,
                        ForAll(
                            DATA,
                            Patch(
                                'Expense Data', // Data source to update
                                LookUp(
                                    'Expense Data',
                                    ID = DATA[@ID] // Correctly reference ID from DATA
                                ),
                                {
                                    'Date - Temp': Blank(),
                                    'Receipt Upload - Temp': Blank(),
                                    'Payment Type - Temp': Blank(),
                                    'Amount - Temp': Blank(),
                                    'Expense Type - Temp': Blank(),
                                    'Vendor Name - Temp': Blank(),
                                    'SubExpense - Temp': Blank(),
                                    'Comments - Temp': Blank(),
                                    'User - Temp': Blank()
                                }
                            )
                        );
                        SubmitForm(Form1_1);
                        Notify("Expenses Have been Successfully Submitted", NotificationType.Success);
                        ResetForm(Form1_1);
                        Refresh('Expense Data'),
                        
                        Notify("All Necessary Fields Need To Be Filled Out", NotificationType.Error)
                    )
                )
            );
        Text: ="Submit Expense(s"
        Width: =132
        X: =1182
        Y: =579
        ZIndex: =2

    ButtonCanvas8 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        FontWeight: =FontWeight.Normal
        Height: =44
        Icon: ="Add"
        Layout: ='ButtonCanvas.Layout'.IconAfter
        OnSelect: |
            =// Check if a match is found
            Set(
                MatchFound,
                !IsEmpty(
                    Filter(
                        'Expense Data',
                        Amount = Value(DataCardValue6.Value),
                        Date = DataCardValue3.SelectedDate,
                        'Vendor Name' = DataCardValue5.Value
                    )
                )
            );
            
            
            // If a match is found, show a warning and do not submit the form
            If(
                MatchFound,
                Notify("A record with these details already exists. Please check your entries.", NotificationType.Warning);
                UpdateContext({confirmEntry: true}),
                // If no match is found, submit the form
                If(
                    Form1_1.Valid,
                    Patch(
                        'Expense Data',
                        Defaults('Expense Data'),
                        {
                            'Receipt Upload': Image1.Image,
                            'Receipt Upload - Temp': Image1.Image,
                            
                            Date: DataCardValue3.SelectedDate,
                            'Date - Temp': DataCardValue3.SelectedDate,
            
                            Amount: Value(DataCardValue6.Value),
                            'Amount - Temp': Value(DataCardValue6.Value),
                            
                            Comments: DataCardValue7.Value,
                            'Comments - Temp': DataCardValue7.Value,
            
                            SubExpense: DataCardValue8.Value,
                            'SubExpense - Temp': DataCardValue8.Value,
                            
                            'Expense Type': DataCardValue4.Selected,
                            'Expense Type - Temp': DataCardValue4.Selected,
            
                            'Vendor Name': DataCardValue5.Value,
                            'Vendor Name - Temp': DataCardValue5.Value, 
                            
                            'Payment Type': DataCardValue2.Selected,
                            'Payment Type - Temp': DataCardValue2.Selected,
                            
                            User: DataCardValue1.Value,
                            'User - Temp': DataCardValue1.Value,
            
                            Attachments: DataCardValue16
            
                           
                        }
                    );
                    ResetForm(Form1_1),
                    Notify(
                        "Please fill in all required fields.",
                        NotificationType.Error
                    )
                )
            );
        Text: ="Add New Expense"
        Width: =142
        X: =54
        Y: =579
        ZIndex: =3

    ButtonCanvas10 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        OnSelect: |-
            =UpdateContext({deleteConfirm: true});
            Notify("Are you sure? Exiting will result in loss of any data on this page", NotificationType.Error)
        Text: ="Exit"
        Visible: =!deleteConfirm
        Width: =96
        X: =40
        Y: =40
        ZIndex: =4

    ButtonCanvas1 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        Icon: ="Delete"
        Layout: ='ButtonCanvas.Layout'.IconAfter
        OnSelect: |-
            =UpdateContext({cancelMode: true});
            UpdateContext({SelectMode: true})
        Text: ="Edit Expense(s"
        Width: =162
        X: =816
        Y: =40
        ZIndex: =5

    ButtonCanvas2 As Button:
        BasePaletteColor: =RGBA(249, 83, 109, 1)
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        OnSelect: |-
            =If(
                CountRows(SelectedItems) > 0,
                ForAll(SelectedItems, Remove('Expense Data', ThisRecord));
                Clear(SelectedItems);
                UpdateContext({ SelectMode: false });
                Notify("Items successfully deleted", NotificationType.Success);
                Refresh('Expense Data'),
            
                Notify("No items selected for deletion. Please select items to delete.", NotificationType.Error)
            
            );
            Refresh('Expense Data');
        Text: ="DELETE SELECTED"
        Visible: =SelectMode
        Width: =152
        X: =1056
        Y: =40
        ZIndex: =6

    ButtonCanvas15 As Button:
        BasePaletteColor: =RGBA(249, 83, 109, 1)
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        OnSelect: |-
            =Collect(TempItems, (Filter('Expense Data','User - Temp' = User().Email)));
            ForAll(TempItems, Remove('Expense Data', ThisRecord));
            Clear(TempItems);
            ResetForm(Form1_1);
            Navigate('Admin Expense Item View', ScreenTransition.Fade);
        Text: ="CONFIRM"
        Visible: =deleteConfirm
        Width: =96
        X: =40
        Y: =40
        ZIndex: =7

    ButtonCanvas16 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        Icon: ="Dismiss"
        OnSelect: |-
            =UpdateContext({deleteConfirm: false});
        Text: =
        Visible: =deleteConfirm
        Width: =32
        X: =154
        Y: =40
        ZIndex: =8

    ButtonCanvas17 As Button:
        BasePaletteColor: =RGBA(249, 83, 109, 1)
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        OnSelect: |-
            =Clear(SelectedItems);
            UpdateContext({SelectMode: false});
        Text: ="CANCEL"
        Visible: =SelectMode
        Width: =96
        X: =1228
        Y: =40
        ZIndex: =9

    ButtonCanvas20 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =44
        OnSelect: |-
            =Patch(
                        'Expense Data',
                        Defaults('Expense Data'),
                        {
                            'Receipt Upload': Image1.Image,
                            'Receipt Upload - Temp': Image1.Image,
                            
                            Date: DataCardValue3.SelectedDate,
                            'Date - Temp': DataCardValue3.SelectedDate,
            
                            Amount: Value(DataCardValue6.Value),
                            'Amount - Temp': Value(DataCardValue6.Value),
                            
                            Comments: DataCardValue7.Value,
                            'Comments - Temp': DataCardValue7.Value,
            
                            SubExpense: DataCardValue8.Value,
                            'SubExpense - Temp': DataCardValue8.Value,
                            
                            'Expense Type': DataCardValue4.Selected,
                            'Expense Type - Temp': DataCardValue4.Selected,
            
                            'Vendor Name': DataCardValue5.Value,
                            'Vendor Name - Temp': DataCardValue5.Value, 
                            
                            'Payment Type': DataCardValue2.Selected,
                            'Payment Type - Temp': DataCardValue2.Selected,
                            
                            User: DataCardValue1.Value,
                            'User - Temp': DataCardValue1.Value
                        }
                    );
                    
            ResetForm(Form1_1);
            UpdateContext({confirmEntry: false});
        Text: ="CONFIRM ENTRY"
        Visible: =confirmEntry
        Width: =140
        X: =552
        Y: =579
        ZIndex: =10

    ButtonCanvas21 As Button:
        BasePaletteColor: =
        BorderColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =44
        OnSelect: |-
            =ResetForm(Form1_1);
            UpdateContext({confirmEntry: false});
        Text: ="Cancel"
        Visible: =confirmEntry
        Width: =84
        X: =710
        Y: =579
        ZIndex: =11

